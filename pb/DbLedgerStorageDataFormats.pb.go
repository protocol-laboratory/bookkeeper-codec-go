// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: DbLedgerStorageDataFormats.proto

package pb

import (
	fmt "fmt"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

//*
// Ledger metadata stored in the bookie
type LedgerData struct {
	Exists               *bool    `protobuf:"varint,1,req,name=exists" json:"exists,omitempty"`
	Fenced               *bool    `protobuf:"varint,2,req,name=fenced" json:"fenced,omitempty"`
	MasterKey            []byte   `protobuf:"bytes,3,req,name=masterKey" json:"masterKey,omitempty"`
	ExplicitLac          []byte   `protobuf:"bytes,4,opt,name=explicitLac" json:"explicitLac,omitempty"`
	Limbo                *bool    `protobuf:"varint,5,opt,name=limbo" json:"limbo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LedgerData) Reset()         { *m = LedgerData{} }
func (m *LedgerData) String() string { return proto.CompactTextString(m) }
func (*LedgerData) ProtoMessage()    {}
func (*LedgerData) Descriptor() ([]byte, []int) {
	return fileDescriptor_cac68653cb2d5bd9, []int{0}
}
func (m *LedgerData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *LedgerData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_LedgerData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *LedgerData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LedgerData.Merge(m, src)
}
func (m *LedgerData) XXX_Size() int {
	return m.Size()
}
func (m *LedgerData) XXX_DiscardUnknown() {
	xxx_messageInfo_LedgerData.DiscardUnknown(m)
}

var xxx_messageInfo_LedgerData proto.InternalMessageInfo

func (m *LedgerData) GetExists() bool {
	if m != nil && m.Exists != nil {
		return *m.Exists
	}
	return false
}

func (m *LedgerData) GetFenced() bool {
	if m != nil && m.Fenced != nil {
		return *m.Fenced
	}
	return false
}

func (m *LedgerData) GetMasterKey() []byte {
	if m != nil {
		return m.MasterKey
	}
	return nil
}

func (m *LedgerData) GetExplicitLac() []byte {
	if m != nil {
		return m.ExplicitLac
	}
	return nil
}

func (m *LedgerData) GetLimbo() bool {
	if m != nil && m.Limbo != nil {
		return *m.Limbo
	}
	return false
}

func init() {
	proto.RegisterType((*LedgerData)(nil), "bookkeeper.proto.go.LedgerData")
}

func init() { proto.RegisterFile("DbLedgerStorageDataFormats.proto", fileDescriptor_cac68653cb2d5bd9) }

var fileDescriptor_cac68653cb2d5bd9 = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0xcf, 0xb1, 0x4a, 0x04, 0x31,
	0x10, 0xc6, 0x71, 0xb2, 0x7a, 0x72, 0x8e, 0x57, 0x45, 0x91, 0x14, 0xb2, 0x04, 0xab, 0x54, 0x79,
	0x02, 0x2b, 0x39, 0x44, 0xf0, 0xaa, 0xb5, 0xb3, 0x9b, 0xec, 0x8e, 0x31, 0xdc, 0xae, 0x13, 0x92,
	0x14, 0xe7, 0x6b, 0xf8, 0x54, 0x96, 0x3e, 0x82, 0xec, 0x93, 0xc8, 0x12, 0xc1, 0xeb, 0xe6, 0xff,
	0x83, 0x29, 0x3e, 0xd0, 0x5b, 0xb7, 0xa3, 0xc1, 0x53, 0x7a, 0x2e, 0x9c, 0xd0, 0xd3, 0x16, 0x0b,
	0x3e, 0x70, 0x9a, 0xb0, 0x64, 0x1b, 0x13, 0x17, 0x96, 0x97, 0x8e, 0x79, 0xbf, 0x27, 0x8a, 0x94,
	0xaa, 0x58, 0xcf, 0xb7, 0x9f, 0x02, 0xa0, 0xfe, 0x2d, 0x0f, 0xf2, 0x1a, 0xce, 0xe8, 0x10, 0x72,
	0xc9, 0x4a, 0xe8, 0xc6, 0xac, 0xbb, 0xbf, 0x5a, 0xfc, 0x95, 0xde, 0x7b, 0x1a, 0x54, 0x53, 0xbd,
	0x96, 0xbc, 0x81, 0xf3, 0x09, 0x73, 0xa1, 0xf4, 0x44, 0x1f, 0xea, 0x44, 0x37, 0x66, 0xd3, 0xfd,
	0x83, 0xd4, 0x70, 0x41, 0x87, 0x38, 0x86, 0x3e, 0x94, 0x1d, 0xf6, 0xea, 0x54, 0x0b, 0xb3, 0xe9,
	0x8e, 0x49, 0x5e, 0xc1, 0x6a, 0x0c, 0x93, 0x63, 0xb5, 0xd2, 0xc2, 0xac, 0xbb, 0x1a, 0xf7, 0x77,
	0x5f, 0x73, 0x2b, 0xbe, 0xe7, 0x56, 0xfc, 0xcc, 0xad, 0x00, 0xc3, 0xc9, 0x5b, 0x8c, 0xd8, 0xbf,
	0x91, 0x3d, 0x9a, 0xb0, 0x9c, 0x81, 0x6c, 0xae, 0x73, 0xed, 0x38, 0xb8, 0x47, 0xf1, 0xd2, 0x44,
	0xf7, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x34, 0xa9, 0x66, 0x95, 0x0a, 0x01, 0x00, 0x00,
}

func (m *LedgerData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *LedgerData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *LedgerData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Limbo != nil {
		i--
		if *m.Limbo {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if m.ExplicitLac != nil {
		i -= len(m.ExplicitLac)
		copy(dAtA[i:], m.ExplicitLac)
		i = encodeVarintDbLedgerStorageDataFormats(dAtA, i, uint64(len(m.ExplicitLac)))
		i--
		dAtA[i] = 0x22
	}
	if m.MasterKey == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("masterKey")
	} else {
		i -= len(m.MasterKey)
		copy(dAtA[i:], m.MasterKey)
		i = encodeVarintDbLedgerStorageDataFormats(dAtA, i, uint64(len(m.MasterKey)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Fenced == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("fenced")
	} else {
		i--
		if *m.Fenced {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.Exists == nil {
		return 0, github_com_gogo_protobuf_proto.NewRequiredNotSetError("exists")
	} else {
		i--
		if *m.Exists {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintDbLedgerStorageDataFormats(dAtA []byte, offset int, v uint64) int {
	offset -= sovDbLedgerStorageDataFormats(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *LedgerData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Exists != nil {
		n += 2
	}
	if m.Fenced != nil {
		n += 2
	}
	if m.MasterKey != nil {
		l = len(m.MasterKey)
		n += 1 + l + sovDbLedgerStorageDataFormats(uint64(l))
	}
	if m.ExplicitLac != nil {
		l = len(m.ExplicitLac)
		n += 1 + l + sovDbLedgerStorageDataFormats(uint64(l))
	}
	if m.Limbo != nil {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovDbLedgerStorageDataFormats(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozDbLedgerStorageDataFormats(x uint64) (n int) {
	return sovDbLedgerStorageDataFormats(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *LedgerData) Unmarshal(dAtA []byte) error {
	var hasFields [1]uint64
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowDbLedgerStorageDataFormats
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: LedgerData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: LedgerData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Exists", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDbLedgerStorageDataFormats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Exists = &b
			hasFields[0] |= uint64(0x00000001)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fenced", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDbLedgerStorageDataFormats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Fenced = &b
			hasFields[0] |= uint64(0x00000002)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MasterKey", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDbLedgerStorageDataFormats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDbLedgerStorageDataFormats
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDbLedgerStorageDataFormats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MasterKey = append(m.MasterKey[:0], dAtA[iNdEx:postIndex]...)
			if m.MasterKey == nil {
				m.MasterKey = []byte{}
			}
			iNdEx = postIndex
			hasFields[0] |= uint64(0x00000004)
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ExplicitLac", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDbLedgerStorageDataFormats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthDbLedgerStorageDataFormats
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthDbLedgerStorageDataFormats
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ExplicitLac = append(m.ExplicitLac[:0], dAtA[iNdEx:postIndex]...)
			if m.ExplicitLac == nil {
				m.ExplicitLac = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limbo", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowDbLedgerStorageDataFormats
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			b := bool(v != 0)
			m.Limbo = &b
		default:
			iNdEx = preIndex
			skippy, err := skipDbLedgerStorageDataFormats(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthDbLedgerStorageDataFormats
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}
	if hasFields[0]&uint64(0x00000001) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("exists")
	}
	if hasFields[0]&uint64(0x00000002) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("fenced")
	}
	if hasFields[0]&uint64(0x00000004) == 0 {
		return github_com_gogo_protobuf_proto.NewRequiredNotSetError("masterKey")
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipDbLedgerStorageDataFormats(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowDbLedgerStorageDataFormats
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDbLedgerStorageDataFormats
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowDbLedgerStorageDataFormats
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthDbLedgerStorageDataFormats
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupDbLedgerStorageDataFormats
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthDbLedgerStorageDataFormats
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthDbLedgerStorageDataFormats        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowDbLedgerStorageDataFormats          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupDbLedgerStorageDataFormats = fmt.Errorf("proto: unexpected end of group")
)
